---
source: compiler/zrc_codegen/src/expr.rs
description: "fn test() {\n    let x: *i32;\n\n    // TEST: should create a GEP that is the same as \"x[4]\"\n    let y = x + 4;\n    // TEST: and the same, with -4:\n    let z = x - 4;\n\n    return;\n}\n"
expression: resulting_ir
---
; ModuleID = 'test'
source_filename = "test"

define void @test() {
entry:
  %let_z = alloca ptr, align 8
  %let_y = alloca ptr, align 8
  %let_x = alloca ptr, align 8
  %load = load ptr, ptr %let_x, align 8
  %ptr_add = getelementptr i32, ptr %load, i32 4
  store ptr %ptr_add, ptr %let_y, align 8
  %load1 = load ptr, ptr %let_x, align 8
  %ptr_sub = getelementptr i32, ptr %load1, i32 -4
  store ptr %ptr_sub, ptr %let_z, align 8
  ret void
}


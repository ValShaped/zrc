---
source: compiler/zrc_codegen/src/expr.rs
description: "fn test() -> i32 {\n    let x: *i32;\n\n    // TEST: should load twice, once to read the value of `x` and once to read what\n    // it points to\n    return *x;\n}\n"
expression: resulting_ir
---
; ModuleID = 'test.zr'
source_filename = "test.zr"

define i32 @test() {
entry:
  %let_x = alloca ptr, align 8
  %load = load ptr, ptr %let_x, align 8
  %load1 = load i32, ptr %load, align 4
  ret i32 %load1
}

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "zrc test runner", isOptimized: false, flags: "--fake-args", runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!2 = !DIFile(filename: "test.zr", directory: "/fake/path")


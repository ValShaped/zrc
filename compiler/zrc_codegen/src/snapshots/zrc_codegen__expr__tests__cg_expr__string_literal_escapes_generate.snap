---
source: compiler/zrc_codegen/src/expr.rs
description: "fn test() {\n    // TEST: should properly generate \\xNN for each escape\n    let x = \"\\n\\r\\t\\\\\\\"\\x41\\0\";\n\n    return;\n}\n"
expression: resulting_ir
---
; ModuleID = 'test.zr'
source_filename = "test.zr"

@str = private unnamed_addr constant [7 x i8] c"\0A\0D\09\\\22)\00", align 1

define void @test() {
entry:
  %let_x = alloca ptr, align 8
  store ptr @str, ptr %let_x, align 8
  ret void
}

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "zrc test runner", isOptimized: false, flags: "--fake-args", runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!2 = !DIFile(filename: "test.zr", directory: "/fake/path")


struct Div32 { quot: i32, rem: i32 }
struct Div64 { quot: i64, rem: i64 }
//struct Div128 { quot: i128, rem: i128 }

fn malloc(size: usize) -> *void;
fn calloc(nmemb: usize, size: usize) -> *void;
fn realloc(ptr: *void, size: usize) -> *void;
fn free(ptr: *void);
fn atoi(nptr: *u8) -> i32;
fn atol(nptr: *u8) -> i64;
fn atoll(nptr: *u8) -> i64;
fn atof(nptr: *u8) -> f64;
fn strtol(nptr: *u8, endptr: **u8, base: i32) -> i64;
fn strtoll(nptr: *u8, endptr: **u8, base: i32) -> i64;
fn strtoul(nptr: *u8, endptr: **u8, base: i32) -> u64;
fn strtoull(nptr: *u8, endptr: **u8, base: i32) -> u64;
fn strtof(nptr: *u8, endptr: **u8) -> f32;
fn strtod(nptr: *u8, endptr: **u8) -> f64;
fn strtold(nptr: *u8, endptr: **u8) -> f64;
fn abs(x: i32) -> i32;
fn labs(x: i64) -> i64;
fn llabs(x: i64) -> i64;
fn div(numer: i32, denom: i32) -> Div32;
fn ldiv(numer: i64, denom: i64) -> Div64;
//fn lldiv(numer: i128, denom: i128) -> Div128
fn abort() -> void;
fn atexit(func: *(fn() -> void)) -> i32;
fn at_quick_exit(func: *(fn() -> void)) -> i32;
fn exit(status: i32) -> void;
fn quick_exit(status: i32) -> void;
fn system(command: *u8) -> i32;
fn getenv(name: *u8) -> *u8;
fn putenv(string: *u8) -> i32;                              // POSIX
fn setenv(name: *u8, value: *u8, overwrite: i32) -> i32;    // POSIX
fn unsetenv(name: *u8) -> i32;                              // POSIX
fn srand(seed: u32) -> void;
fn rand() -> i32;
